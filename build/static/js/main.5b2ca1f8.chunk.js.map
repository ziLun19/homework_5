{"version":3,"sources":["ToDoAddForm.js","ToDoListItem.js","ToDoTitle.js","ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoAddForm","props","formSubmit","e","onAddItem","preventDefault","inputRef","current","value","React","createRef","onSubmit","this","type","name","ref","autoComplete","Component","ListItem","handleItemClick","onItemClick","target","id","children","status","onClick","data-status","style","textDecoration","headerStyle","textAlign","padding","ToDoTitle","ToDoList","addItem","text","list","state","tempArr","concat","length","setState","toggleStatus","map","item","toString","width","margin","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAwBeA,E,kDArBb,WAAYC,GAAQ,IAAD,8BACnB,cAAMA,IAIPC,WAAa,SAACC,GACb,IAAQC,EAAc,EAAKH,MAAnBG,UACRD,EAAEE,iBACFD,EAAU,EAAKE,SAASC,QAAQC,OAChC,EAAKF,SAASC,QAAQC,MAAQ,IAP9B,EAAKF,SAAWG,IAAMC,YAFH,E,0CAYpB,WACC,OACC,uBAAMC,SAAUC,KAAKV,WAArB,UACC,uBAAOW,KAAK,OAAOC,KAAK,WAAWC,IAAKH,KAAKN,SAAUU,aAAa,QACpE,wBAAQH,KAAK,SAASL,MAAM,SAA5B,wB,GAjBsBC,IAAMQ,WC6BjBC,E,4MA5BbC,gBAAkB,SAAChB,IAEnBiB,EADwB,EAAKnB,MAArBmB,aACIjB,EAAEkB,OAAOC,K,4CAGtB,WACC,MAIIV,KAAKX,MAHRsB,EADD,EACCA,SACAD,EAFD,EAECA,GACAE,EAHD,EAGCA,OAEF,OACE,oBACCF,GAAIA,EACJG,QAASb,KAAKO,gBACdO,cAAaF,EACbG,MACcH,EACA,CAAEI,eAAgB,gBAClB,CAAEA,eAAgB,QAPjC,SAUEL,Q,GAvBkBN,aCQvB,IAAMY,EAAc,CAChBC,UAAW,SACXC,QAAS,QAEEC,EAZf,WACI,OACI,wBAAQL,MAAOE,EAAf,SACI,kDC8DGI,E,kDA7Db,WAAYhC,GAAQ,IAAD,8BACnB,cAAMA,IAKPiC,QAAU,SAACC,GACV,IAAQC,EAAS,EAAKC,MAAdD,KACF,GAAa,KAATD,EAAa,CAAC,IAAMG,EAAUF,EAAKG,OAAO,CAClDjB,GAAIc,EAAKI,OAAS,EAClBL,OACAX,QAAQ,IAET,EAAKiB,SAAS,CACbL,KAAME,MAdW,EAkBpBI,aAAe,SAACpB,GACf,IACMgB,EADW,EAAKD,MAAdD,KACaO,KAAI,SAAAC,GACxB,OAAGA,EAAKtB,GAAGuB,aAAevB,EAAGuB,WACpB,CACPvB,GAAIsB,EAAKtB,GACTa,KAAMS,EAAKT,KACXX,QAASoB,EAAKpB,QAGToB,KAER,EAAKH,SAAS,CACbL,KAAME,KA7BH,EAAKD,MAAQ,CACbD,KAAM,IAHS,E,0CAkCpB,WAAU,IAAD,OACAA,EAASxB,KAAKyB,MAAdD,KAMR,OACC,sBAAKT,MANW,CAChBmB,MAAO,QACPC,OAAQ,OACRjB,UAAW,UAGX,UACK,cAAC,EAAD,IACJ,cAAC,EAAD,CAAU1B,UAAWQ,KAAKsB,UAC1B,6BACEE,EAAKO,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAECtB,GAAIsB,EAAKtB,GACTE,OAAQoB,EAAKpB,OACbJ,YAAa,EAAKsB,aAJnB,SAMEE,EAAKT,MALDS,EAAKtB,gB,GAjDML,aCCR+B,EAHH,kBACV,cAAC,EAAD,KCQaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACT,eAAC,IAAMC,WAAP,WACA,cAAC,EAAD,IADA,OAGAC,SAASC,eAAe,SAKxBb,K","file":"static/js/main.5b2ca1f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ToDoAddForm extends React.Component { \r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.inputRef = React.createRef();\r\n\t}\r\n\r\n\tformSubmit = (e) => {\r\n\t\tconst { onAddItem } = this.props;\r\n\t\te.preventDefault();\r\n\t\tonAddItem(this.inputRef.current.value);\r\n\t\tthis.inputRef.current.value = '';\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<form onSubmit={this.formSubmit}>\r\n\t\t\t\t<input type=\"text\" name=\"todoItem\" ref={this.inputRef} autoComplete=\"off\" />\r\n\t\t\t\t<button type=\"submit\" value=\"submit\">Add</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ToDoAddForm;","import React, { Component } from 'react'\r\n\r\nclass ListItem extends Component {\r\n  handleItemClick = (e) => {\r\n\t\tconst { onItemClick } = this.props;\r\n\t\tonItemClick(e.target.id);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tchildren,\r\n\t\t\tid,\r\n\t\t\tstatus,\r\n\t\t} = this.props;\r\n\treturn(\r\n\t\t\t<li\r\n\t\t\t\tid={id}\r\n\t\t\t\tonClick={this.handleItemClick}\r\n\t\t\t\tdata-status={status}\r\n\t\t\t\tstyle={\r\n                  status ? \r\n                  { textDecoration: 'line-through' } : \r\n                  { textDecoration: 'none' }\r\n                }\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ListItem","import React from 'react';\r\n\r\nfunction ToDoTitle() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>CGU Todo list</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\nexport default ToDoTitle;","import React, { Component } from \"react\";\r\nimport TodoForm from './ToDoAddForm';\r\nimport TodoItem from './ToDoListItem';\r\nimport ToDoTitle from \"./ToDoTitle\"\r\n\r\nclass ToDoList extends Component {\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n      this.state = {\r\n      list: [],\r\n    };\r\n\t}\r\n\taddItem = (text) => {\r\n\t\tconst { list } = this.state;\r\n        if (text !== '') {const tempArr = list.concat({\r\n\t\t\t\tid: list.length + 1,\r\n\t\t\t\ttext,ã€€\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\tlist: tempArr,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\ttoggleStatus = (id) => {\r\n\t\tconst { list } = this.state;\r\n\t\tconst tempArr = list.map(item => {\r\n\t\t\tif(item.id.toString() === id.toString()) {\r\n\t\t\t\treturn ({\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\ttext: item.text,\r\n\t\t\t\t\tstatus: !item.status,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tlist: tempArr,\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { list } = this.state;\r\n\t\tconst divStyle = {\r\n\t\t\twidth: '250px',\r\n\t\t\tmargin: 'auto',\r\n\t\t\ttextAlign: 'center',\r\n\t\t}; \r\n\t\treturn(\r\n\t\t\t<div style={divStyle}>\r\n        <ToDoTitle/>\r\n\t\t\t\t<TodoForm onAddItem={this.addItem}  />\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{list.map(item => (\r\n\t\t\t\t\t\t<TodoItem\r\n\t\t\t\t\t\t\tkey={item.id} \r\n\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t\tstatus={item.status}\r\n\t\t\t\t\t\t\tonItemClick={this.toggleStatus}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.text}\r\n\t\t\t\t\t\t</TodoItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ToDoList;","import './App.css';\nimport './App.css';\nimport Todolist from './ToDoList';\nconst App = () => (\n  <Todolist />\n);\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<React.StrictMode>\n<App />,\n</React.StrictMode>,\ndocument.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}